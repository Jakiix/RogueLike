<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0,0, obj_room); // create room

rooms_generated = 0;
gemx = 0;
gemy = 0;
gen = true;

up = false;
down = false;
left = false;
right = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize(); // makes it rng

if (gen == true)
{
    do
    {
        rngroom = irandom(3);
        rooms_generated+=1;
        
        if (rooms_generated &gt;= 5)
        {
            gen = false;
        }
        if (rngroom == 0 &amp;&amp; up == false)
        {
            up = false;
            down = true;
            left = false;
            right = false;
            
            instance_create(gemx+960, gemy, obj_door_top);
            gemy -= 1080;
            instance_create(gemx, gemy, obj_room);
            instance_create(gemx+960, gemy+982, obj_door_bottom);
            if (rooms_generated == 4)
            {
                instance_create(gemx + 500, gemy + 500, obj_monster_shot);    
            }
            
        }
        if (rngroom == 1 &amp;&amp; down == false)
        {
            up = true;
            down = false;
            left = false;
            right = false;
            
            instance_create(gemx+960, gemy+982, obj_door_bottom);
            gemy += 1080;
            instance_create(gemx, gemy, obj_room);
            instance_create(gemx+960, gemy, obj_door_top);
                        if (rooms_generated == 4)
            {
                instance_create(gemx + 500, gemy - 500, obj_monster_shot);    
            }
        }
        
        if (rngroom == 2 &amp;&amp; right == false)
        {
            up = false;
            down = false;
            left = true;
            right = false;
            
            instance_create(gemx +1840, gemy+540, obj_door_right);
            gemx += 1920;
            instance_create(gemx, gemy, obj_room);
            instance_create(gemx, gemy+540, obj_door_left);
                        if (rooms_generated == 4)
            {
                instance_create(gemx + 500, gemy + 500, obj_monster_shot);    
            }
        }     
        if (rngroom == 3 &amp;&amp; left == false)
        {
            up = false;
            down = false;
            left = false;
            right = true;
            
            instance_create(gemx, gemy+540, obj_door_left);
            gemx -= 1920;
            instance_create(gemx, gemy, obj_room);
            instance_create(gemx+1840/*1920 - taille de porte*/, gemy+540, obj_door_right);
                    if (rooms_generated == 4)
            {
                  instance_create(gemx + 500, gemy + 500, obj_monster_shot);    
            }
        }         
    }
    until (rooms_generated &gt;= 10)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
