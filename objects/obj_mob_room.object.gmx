<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();

ranamount = irandom(3); //random mob number 0-4
spawned = false; //used to say if we're finished spawning

amount = 0; // amount spawned
doorslocked = false; // obviously used to unlock the doors
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (spawned == false)
{
    if (distance_to_object(Player_obj) &lt; 600)// if player has entered the room
    {
        
        ranmonster = irandom(1);
        ranx = random_range(x - 384, x + 320);
        rany = random_range(y - 256, y + 192);
        if (amount &gt;= ranamount)
        {
            spawned = true;
        }
        if (ranmonster == 0 &amp;&amp; place_empty(ranx, rany))
        {
            instance_create(ranx, rany, Test_ennemy);
            amount++;
        }
        if (ranmonster == 1 &amp;&amp; place_empty(ranx, rany))
        {
            instance_create(ranx, rany, obj_boss_1);
            amount++;
        }
    }
}

var nearestEnemy;
nearestEnemy = instance_nearest(x, y, obj_parent_monster);

if (instance_number(obj_parent_monster) != 0)
{
    if (doorslocked != true)
    {
        doorslocked = true;
        audio_play_sound(DoorLocked, 10, false);
    } 
    with(Door_top_obj)
        image_index = 1;
    with(Door_bottom_obj)
        image_index = 1;
    with(Door_left_obj)
        image_index = 1;
    with(Door_right_obj)
        image_index = 1;
}
else
{
    if (doorslocked == true)
    {
        doorslocked = false;
        audio_play_sound(DoorOpened, 10, false);
        with(Pikachu_obj)
        {
            instance_destroy();
        }
    }
    with(Door_top_obj)
        image_index = 0;
    with(Door_bottom_obj)
        image_index = 0; 
    with(Door_left_obj)
        image_index = 0; 
    with(Door_right_obj)
        image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
