<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.dir = 0;
movespeed = 15;
firing = false;
bounce = 0;


canmove = true;

antistickx = 500;
antisticky = 500;

hp = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x, y, object1);
firing = false;
canmove = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check(ord("Z")) &amp;&amp; keyboard_check(ord("Q")))
    movespeed = 15;
else if (keyboard_check(ord("Z")) &amp;&amp; keyboard_check(ord("E")))
    movespeed = 15; 
else if (keyboard_check(ord("S")) &amp;&amp; keyboard_check(ord("Q")))
    movespeed = 15;
else if (keyboard_check(ord("S")) &amp;&amp; keyboard_check(ord("D"))) 
    movespeed = 15;
else
    movespeed = 15;
   
if (canmove == true)
{
    if (keyboard_check(ord("Z"))/* &amp;&amp; !place_meeting(x, y-movespeed, obj_room)*/) {y -= movespeed;}
    if (keyboard_check(ord("S"))/* &amp;&amp; !place_meeting(x, y+movespeed, obj_room)*/) {y += movespeed;}
    if (keyboard_check(ord("Q"))/* &amp;&amp; !place_meeting(x-movespeed, y, obj_room)*/) {x -= movespeed;}
    if (keyboard_check(ord("D"))/* &amp;&amp; !place_meeting(x+movespeed, y, obj_room)*/) {x += movespeed;}
}
/*
if (keyboard_check(ord("Z")) &amp;&amp; !place_meeting(x, y-movespeed, obj_shot)) {y -= movespeed;}
if (keyboard_check(ord("S")) &amp;&amp; !place_meeting(x, y+movespeed, obj_shot)) {y += movespeed;}
if (keyboard_check(ord("Q")) &amp;&amp; !place_meeting(x-movespeed, y, obj_shot)) {x -= movespeed;}
if (keyboard_check(ord("D")) &amp;&amp; !place_meeting(x+movespeed, y, obj_shot)) {x += movespeed;}
*/


if (keyboard_check(ord("A")))
{
    audio_play_sound(denver, 10, false);
}
if (keyboard_check(ord("I")))
{
    if (firing == false)
    {   
        global.dir = 90;
        firing = true;
        alarm[0] = 20;
    }  
}

if (keyboard_check(ord("K")))
{
    if (firing == false)
    {   
        global.dir = 270;
        firing = true;
        alarm[0] = 20;
    }  
}

if (keyboard_check(ord("J")))
{
    if (firing == false)
    {   
        global.dir = 180;
        firing = true;
        alarm[0] = 20;
    }  
}

if (keyboard_check(ord("L")))
{
    if (firing == false)
    {   
        global.dir = 0;
        firing = true;
        alarm[0] = 20;
    }  
}

if (place_meeting(x, y, obj_monster))
{
    var nearest_enemy;
    nearest_enemy = instance_nearest(x, y, object2);
    
    direction = point_direction(x, y, nearest_enemy.x, nearest_enemy.y) + 180;
    
    bounce = 1;
    alarm[1] = 30;
    with (nearest_enemy)
    {
        direction = point_direction(x, y, obj_player.x, obj_player.y) + 180;
        bounce = 1;
        alarm[0] = 10;
    }
}
else if (place_meeting(x, y, obj_shot))
{
    var nearest_enemy;
    nearest_enemy = instance_nearest(x, y, obj_shot);
    
    direction = point_direction(x, y, nearest_enemy.x, nearest_enemy.y) + 180;
    
    bounce = 1;
    with (nearest_enemy)
    {
        instance_destroy();
    }
    alarm[1] = 10;
}


if (bounce == 1)
{
    alarm[1] = 30;
    speed = 5;
    bounce = 0;
    canmove = false;
}
/*
if (place_meeting(x,y,obj_monster))
{
    x = antistickx;
    y = antisticky;
}
else if (place_meeting(x,y,obj_room))
{
   x = antistickx;
   y = antisticky;
}
else
{
   antistickx = x;
   antisticky = y;
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
